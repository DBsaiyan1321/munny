{"version":3,"sources":["components/Nav/Nav.js","components/ReusableComponents/Button.js","util/riskLevels.js","components/ReusableComponents/DoughnutChart.js","components/ReusableComponents/SelectMenu.js","components/ReusableComponents/DropDisplay.js","components/ReusableComponents/RiskLevelSheetRow.js","components/Home/HomePage.js","components/Home/HomePageContainer.js","actions/risk_actions.js","actions/calculator_actions.js","util/calculatorUtil.js","components/Calculator/CalculatorPage.js","components/Calculator/CalculatorPageContainer.js","components/App.js","components/Root.js","reportWebVitals.js","reducers/calculator_reducer.js","reducers/risk_reducer.js","reducers/root_reducer.js","store/store.js","index.js"],"names":["Nav","className","to","Button","onClick","text","textStyle","buttonStyle","riskLevels","1","level","bonds","largeCap","midCap","foreign","smallCap","2","3","4","5","6","7","8","9","10","DoughnutChart","props","chartRef","useRef","useEffect","myChartRef","current","getContext","Chart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","events","plugins","render","fontColor","position","id","width","height","ref","SelectMenu","defaultSelected","useState","toggle","setToggle","selected","setSelected","map","option","i","DropDisplay","title","children","titleClasses","bodyClasses","RiskLevelSheetRow","category","percentage","style","HomePage","doughnut","setDoughnut","levels","chartLabels","state","risk","chartData","setRiskLevel","connect","dispatch","RECEIVE_INPUTS","calculateNewAmount","total","toFixed","calculateDifference","amount","expected","isNegative","number","CalculatorPage","receiveInputs","calculator","setBonds","setMidCap","setLargeCap","setForeign","setSmallCap","error","setError","inputs","inputsObject","input","parseFloat","getTotal","newAmounts","differences","transfers","words","returnVal","arr","difference","push","cat","val","sort","a","b","j","length","sum","Math","abs","findMinimumTransfers","onChange","e","currentTarget","value","placeholder","Object","keys","transfer","isNaN","validateInputs","App","exact","path","component","HomePageContainer","CalculatorPageContainer","Root","store","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","calculatorReducer","initialState","action","freeze","riskReducer","rootReducer","combineReducers","configureStore","preloadedState","createStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3d2213d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Nav.css\";\nimport { GiMoneyStack } from \"react-icons/gi\";\nimport { AiFillHome } from \"react-icons/ai\";\n\nconst Nav = () => { \n    return (\n        <nav className=\"navbar\">\n            <Link to=\"/\"><GiMoneyStack className=\"navbar__logo\" /></Link>\n            <Link to=\"/\"><AiFillHome className=\"navbar__logo\" /></Link>\n        </nav>\n    )\n};\n\nexport default Nav;","import React from \"react\";\nimport \"./Button.css\";\n\nconst Button = ({ onClick, text, textStyle, buttonStyle }) => { \n    return (\n        <button \n            className={\"risk-button\"}\n            onClick={onClick}\n        >\n            {text}\n        </button>\n    )\n};\n\nexport default Button;","export const riskLevels = { \n    1: {\n        level: 1, \n        bonds: 80, \n        largeCap: 20, \n        midCap: 0, \n        foreign: 0,\n        smallCap: 0\n    },\n    2: {\n        level: 2,\n        bonds: 70,\n        largeCap: 15,\n        midCap: 15,\n        foreign: 0,\n        smallCap: 0\n    },\n    3: {\n        level: 3,\n        bonds: 60,\n        largeCap: 15,\n        midCap: 15,\n        foreign: 10,\n        smallCap: 0\n    },\n    4: {\n        level: 4,\n        bonds: 50,\n        largeCap: 20,\n        midCap: 20,\n        foreign: 10,\n        smallCap: 0\n    },\n    5: {\n        level: 5,\n        bonds: 40,\n        largeCap: 20,\n        midCap: 20,\n        foreign: 20,\n        smallCap: 0\n    },\n    6: {\n        level: 6,\n        bonds: 35,\n        largeCap: 25,\n        midCap: 5,\n        foreign: 30,\n        smallCap: 5\n    },\n    7: {\n        level: 7,\n        bonds: 20,\n        largeCap: 25,\n        midCap: 25,\n        foreign: 25,\n        smallCap: 5\n    },\n    8: {\n        level: 8,\n        bonds: 10,\n        largeCap: 20,\n        midCap: 40,\n        foreign: 20,\n        smallCap: 10\n    },\n    9: {\n        level: 9,\n        bonds: 5,\n        largeCap: 15,\n        midCap: 40,\n        foreign: 25,\n        smallCap: 15\n    },\n    10: {\n        level: 10,\n        bonds: 0,\n        largeCap: 5,\n        midCap: 25,\n        foreign: 30,\n        smallCap: 40\n    }\n};","import React, { useEffect, useRef } from \"react\"; \nimport Chart from 'chart.js';\nimport \"chartjs-plugin-labels\";\nimport \"./DoughnutChart.css\";\n\nconst DoughnutChart = props => { \n    const chartRef = useRef();\n\n    useEffect(() => { \n        const myChartRef = chartRef.current.getContext(\"2d\");\n\n        new Chart(myChartRef, {\n            type: 'doughnut',\n            data: {\n                labels: props.labels,\n                datasets: [{\n                    label: '# of Votes',\n                    data: props.data,\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.2)',\n                        'rgba(54, 162, 235, 0.2)',\n                        'rgba(255, 206, 86, 0.2)',\n                        'rgba(75, 192, 192, 0.2)',\n                        'rgba(153, 102, 255, 0.2)',\n                        'rgba(255, 159, 64, 0.2)'\n                    ],\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)'\n                    ],\n                    borderWidth: 1\n                }]\n            },\n            options: {\n                events: [],\n                plugins: {\n                    labels: [\n                        {\n                            render: 'label',\n                            fontColor: 'black'\n                        },\n                        {\n                            render: 'percentage',\n                            position: 'outside'\n                        } \n                    ]\n                }\n            }\n        })\n    }, [props.data]); \n\n    return <div className=\"chart\"><canvas id=\"myChart\" width=\"200\" height=\"200\" ref={chartRef}></canvas></div>\n};\n\nexport default DoughnutChart;","import React, { useState } from \"react\";\nimport \"./SelectMenu.css\"; \nimport { TiArrowSortedDown, TiArrowSortedUp } from \"react-icons/ti\";\n\nconst SelectMenu = ({options, onClick, defaultSelected}) => { \n    const [toggle, setToggle] = useState(null);\n    const [selected, setSelected] = useState(defaultSelected || \"Select Level\")\n\n    const changeMenu = () => { \n        if (toggle === \"toggle\") { \n            setToggle(null);\n        } else { \n            setToggle(\"toggle\");\n        }\n    }\n\n    // window.addEventListener('click', function (e) {\n    //     console.log(e);\n    //     setToggle(null);\n    // });\n\n    return (\n        <>\n            <div className={`select-menu ${toggle}`} onClick={changeMenu}>\n                <div className=\"select-menu__selected\">\n                    <p>{selected}</p>\n                    {toggle ? <TiArrowSortedUp /> : <TiArrowSortedDown />}\n                </div>\n                <ul className=\"select-list\">\n                    { \n                        options.map((option, i) => <li className=\"select-list__item\" key={i} onClick={() => { onClick(option); setSelected(option); }}>{option}</li>)\n                    }\n                </ul>\n            </div>\n        </>\n    )\n};\n\nexport default SelectMenu;","import React, { useEffect, useState } from \"react\";\nimport { TiArrowSortedDown, TiArrowSortedUp } from \"react-icons/ti\";\nimport \"./DropDisplay.css\";\n\nconst DropDisplay = ({ title, children, selected, titleClasses, bodyClasses }) => { \n    const [toggle, setToggle] = useState(selected ? \"toggle\" : \"\");\n\n    useEffect(() => { \n        if (selected && toggle === \"\") setToggle(\"toggle\");\n    }, [selected])\n\n    const changeMenu = () => {\n        if (toggle === \"toggle\") {\n            setToggle(\"\");\n        } else {\n            setToggle(\"toggle\");\n        }\n    }\n\n    return (\n        <>\n            <div className={`drop-display ${toggle}`}>\n                <div className={`drop-display__title ${titleClasses}`} onClick={changeMenu}>\n                    <p>{title}</p>  \n                    {toggle ? <TiArrowSortedUp /> : <TiArrowSortedDown /> }\n                </div>\n                <div className={`drop-display-info ${bodyClasses}`}>\n                    {children}\n                </div>\n            </div>\n        </>\n    )\n};\n\nexport default DropDisplay;","import React from \"react\";\nimport \"./RiskLevelSheetRow.css\";\n\nconst RiskLevelSheetRow = ({ category, percentage, style}) => { \n    return ( \n        <li className={`risk-level-sheet__row ${style ? style : \"\"}`}>\n            <p>{category}</p>\n            <p>{percentage}</p>\n        </li>\n    )\n};\n\nexport default RiskLevelSheetRow;","import React, { useState } from \"react\"; \nimport Nav from \"../Nav/Nav\";\nimport Button from \"../ReusableComponents/Button\";\nimport { Link } from \"react-router-dom\"\nimport \"./HomePage.css\";\nimport { riskLevels } from \"../../util/riskLevels\";\nimport DoughnutChart from \"../ReusableComponents/DoughnutChart\";\nimport SelectMenu from \"../ReusableComponents/SelectMenu\";\nimport DropDisplay from \"../ReusableComponents/DropDisplay\";\nimport RiskLevelSheetRow from \"../ReusableComponents/RiskLevelSheetRow\";\n\nconst HomePage = props => { \n    const [doughnut, setDoughnut] = useState(false);\n\n    const levels = [1,2,3,4,5,6,7,8,9,10];\n\n    const chartLabels = \"level\" in props.state.risk ? [\"Bonds\", \"Large Cap\", \"Mid Cap\", \"Foreign\", \"Small Cap\"] : [\"Select Level\", \"Select Level\", \"Select Level\", \"Select Level\", \"Select Level\"];\n    const chartData = \"level\" in props.state.risk ? [props.state.risk.bonds, props.state.risk.largeCap, props.state.risk.midCap, props.state.risk.foreign, props.state.risk.smallCap,] : [20, 20, 20, 20, 20];\n    return (\n        <>\n            <Nav />\n            <div className=\"home-page\"> \n                <p className=\"home-page__header\">Please Select A Risk Level For Your Investment Portfolio. 1 is low, 10 is high.</p>\n                <SelectMenu options={levels} onClick={level => props.setRiskLevel(level)} />\n                <Button text={ doughnut ? \" Sheet\" : \"Doughnut\"} onClick={() => setDoughnut(!doughnut)} />\n                {\"level\" in props.risk ? <Link to=\"/calculator\"><Button text=\"Continue\" /></Link> : null}\n                {!doughnut ? (\n                    <div className=\"grid-container\">\n                        {levels.map(level => {\n                            return (\n                                <DropDisplay title={`Risk Level ${level}`} key={level} selected={level === props.state.risk.level}>\n                                    <ul className=\"risk-level-sheet\">\n                                        <RiskLevelSheetRow category=\"Category\" percentage=\"Percentage\" style=\"risk-level-sheet-row--header\" /> \n                                        <RiskLevelSheetRow category=\"Bonds\" percentage={riskLevels[level].bonds} /> \n                                        <RiskLevelSheetRow category=\"Large Cap\" percentage={riskLevels[level].largeCap} /> \n                                        <RiskLevelSheetRow category=\"Mid Cap\" percentage={riskLevels[level].midCap} /> \n                                        <RiskLevelSheetRow category=\"Foreign\" percentage={riskLevels[level].foreign} /> \n                                        <RiskLevelSheetRow category=\"Small Cap\" percentage={riskLevels[level].smallCap} />                \n                                    </ul>\n                                </DropDisplay>\n                            )\n                        })}\n                    </div>\n                ) : <DoughnutChart data={chartData} labels={chartLabels} />\n                }\n            </div>\n        </>\n    )\n};\n\nexport default HomePage;","import { connect } from \"react-redux\";\nimport HomePage from \"./HomePage\";\nimport { setRiskLevel } from \"../../actions/risk_actions\";\n\nconst mapStateToProps = state => ({ \n    state,\n    risk: state.risk\n});\n\nconst mapDispatchToProps = dispatch => ({ \n    setRiskLevel: level => dispatch(setRiskLevel(level))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);","export const setRiskLevel = level => ({\n    type: level\n});\n","export const RECEIVE_INPUTS = \"RECEIVE_INPUTS\";\n\nexport const receiveInputs = inputs => ({ \n    type: RECEIVE_INPUTS, \n    inputs\n});\n","export const getTotal = inputsObject => {\n    let total = 0;\n    for (const input in inputsObject) {\n        total += parseFloat(inputsObject[input]);\n    }\n    return total.toFixed(2);\n};\n\nexport const calculateNewAmount = (total, percentage) => (total * (percentage / 100)).toFixed(2);\n\nexport const calculateDifference = (amount, expected) => (amount - expected).toFixed(2);\n\nexport const isPositive = number => number > 0;\n\nexport const isNegative = number => number < 0;\n\n// Zero is neither positive nor negative.\n\n// Problem: Given differences and corresponding category names, find the recommended \n// transfers to balance everything out. It should be the minimum amount of transfers possible.\nexport const findMinimumTransfers = differences => {\n    const words = {\n        bonds: \"Bonds\",\n        midCap: \"Mid Cap\",\n        largeCap: \"Large Cap\",\n        foreign: \"Foreign\",\n        smallCap: \"Small Cap\"\n    };\n\n    const returnVal = [];\n\n    const arr = []\n    for (const difference in differences) {\n        arr.push({ cat: difference, val: differences[difference] });\n    }\n\n    arr.sort((a, b) => a.val - b.val);\n\n    let i = 0;\n    let j = arr.length - 1;\n\n    while (i < j) {\n        const sum = parseFloat(arr[i].val) + parseFloat(arr[j].val);\n        if (sum > 0) {\n            arr[j].val = sum;\n            returnVal.push(`Transfer $${(Math.abs(arr[i].val)).toFixed(2)} from ${words[arr[j].cat]} to ${words[arr[i].cat]}`);\n            i++;\n        } else if (sum < 0) {\n            arr[i].val = sum;\n            returnVal.push(`Transfer $${(Math.abs(arr[j].val)).toFixed(2)} from ${words[arr[j].cat]} to ${words[arr[i].cat]}`);\n            j--;\n        } else {\n            if (Math.abs(arr[j].val) !== 0) { \n                returnVal.push(`Transfer $${(Math.abs(arr[j].val)).toFixed(2)} from ${words[arr[j].cat]} to ${words[arr[i].cat]}`)\n            } \n            i++;\n            j--;\n        }\n    }\n    return returnVal;\n};\n\n// Example 1-\n// {\n//     bonds: -200,\n//     largeCap: -150, \n//     midCap: 50, \n//     foreign: 100, \n//     smallCap: 200\n// }\n// Answer: \n// • Transfer $200 from Bonds to Small Cap.\n// • Transfer $100 from Large Cap to Foreign.\n// • Transfer $50 from Large Cap to Mid Cap.\n\n// [-200, -150]\n// [50,100,200]\n\n// [-150]\n// [50,100]\n\n// [-50]\n// [50]\n//     i     i        j      j\n// [-200, -150, 50, 100, 200]\n\n// Example 2- \n// {\n//     bonds: -200,\n//     largeCap: -149,\n//     midCap: 235,\n//     foreign: 106, \n//     smallCap: 8\n// }\n// Answer: \n// • Transfer $106 from Large Cap to Foreign.\n// • Transfer $8 from Large Cap to Small Cap.\n// • Transfer $35 from Large Cap to Mid Cap.\n// • Transfer $200 from Bonds to Mid Cap.\n// i                     j         i           j\n// [-200, -149, 8, 106, 235] => [-149, 8, 106, 35]\n// Transfer 200 from Bonds to Mid Cap\n\n// if ((arr[i] + arr[j]) > 0) { \n//     arr[j] = (arr[i] + arr[j]) \n//     push statement into output\n//     \"array[i].cat owes array[j].cat arr[i]\"\n//     i++\n// } else if ((arr[i] + arr[j]) < 0) { \n//     arr[j] = (arr[i] + arr[j])\n//     \"array[i].cat owes array[j].cat arr[j]\"\n//     push statement into output\n//     j--\n// } else { \n//     push statement into output\n//     \"array[i].cat owes array[j].cat array[i]\"\n//     i++\n//     j++\n// }\n\n// [-149, 8, 106, 35]\n\n// Right off the bat, I notice that the amount that we are down is the same amount we are up. What I mean is that we\n// are a total of 350 down in bonds and largeCap then 350 up in the rest of the categories. \n\n// If I order the ups from smallest to largest, then do the same for the downs, it's easy to calculate. \n\n// Example 2-\n// ups = [8,106,235]\n// downs = [149, 200] // We don't consider them negative\n// Move backwards through both and compare\n// 235 - 200 = 35. So we know we can transfer 200 from bonds to midCap\n\n// Now the arrays look like\n// ups = [8,106,35]\n// downs = [149]\n// 149 - 35. We know we can transfer the rest of our largeCap to midCap\n\n// ups = [8,106]\n// downs = [114]\n// 114 - 106. We can transfer 106 from largecap to foreign.\n\n// ups = [8]\n// downs = [8]\n// 8 - 8. We can transfer 8 from largecap to smallcap\n\n// downs means we need to go down in those account because we have too much.\n// ups means we need to go up in those accounts because we don't have enough\n\n// I guess a min heap and max heap would work in this case too.\n// Maybe I just need to sort one array, then have a pointer on one end and a pointer on the other.","import React, { useState } from \"react\"; \nimport \"./CalculatorPage.css\";\nimport Nav from \"../Nav/Nav\";\nimport DropDisplay from \"../ReusableComponents/DropDisplay\";\nimport Button from \"../ReusableComponents/Button\";\nimport RiskLevelSheetRow from \"../ReusableComponents/RiskLevelSheetRow\";\nimport { getTotal, calculateNewAmount, calculateDifference, isNegative, findMinimumTransfers } from \"../../util/calculatorUtil\";\nimport { Redirect } from \"react-router-dom\";\n\nconst CalculatorPage = ({ state, receiveInputs }) => { \n    const [bonds, setBonds] = useState(state.calculator.bonds || 20);\n    const [midCap, setMidCap] = useState(state.calculator.midCap || 20);\n    const [largeCap, setLargeCap] = useState(state.calculator.largeCap || 20);\n    const [foreign, setForeign] = useState(state.calculator.foreign || 20);\n    const [smallCap, setSmallCap] = useState(state.calculator.smallCap || 20);\n    const [error, setError] = useState(\"\");\n\n    let inputs = {\n        bonds,\n        midCap,\n        largeCap,\n        foreign,\n        smallCap\n    };\n\n    let total = getTotal(state.calculator);\n\n    let newAmounts = { \n        bonds: calculateNewAmount(total, state.risk.bonds),\n        midCap: calculateNewAmount(total, state.risk.midCap),\n        largeCap: calculateNewAmount(total, state.risk.largeCap),\n        foreign: calculateNewAmount(total, state.risk.foreign),\n        smallCap: calculateNewAmount(total, state.risk.smallCap)\n    };\n\n    let differences = { \n        bonds: calculateDifference(state.calculator.bonds, newAmounts.bonds),\n        midCap: calculateDifference(state.calculator.midCap, newAmounts.midCap),\n        largeCap: calculateDifference(state.calculator.largeCap, newAmounts.largeCap),\n        foreign: calculateDifference(state.calculator.foreign, newAmounts.foreign),\n        smallCap: calculateDifference(state.calculator.smallCap, newAmounts.smallCap)\n    };\n\n    let transfers = [];\n    if (\"bonds\" in differences) transfers = findMinimumTransfers(differences);\n\n    const validateInputs = () => {\n        for (const input in inputs) {\n            if (inputs[input] === \"\") return false;\n            const value = parseFloat(inputs[input] * 1);\n            if (isNaN(value) || isNegative(value)) return false;\n        }\n\n        setError(\"\");\n        return true;\n    }\n\n    return !state.risk.level ? <Redirect to=\"/\" /> : (\n        <>\n            <Nav />\n            <div className=\"calculator-page\">\n                \n                <h1>Calculator Page</h1>\n                <div className=\"calculator-user-info\"> \n                    <DropDisplay title={`Risk Level ${state.risk.level}`} selected>\n                        <ul className=\"risk-level-sheet\">\n                            <RiskLevelSheetRow category=\"Category\" percentage=\"Percentage\" style=\"risk-level-sheet-row--header\" />\n                            <RiskLevelSheetRow category=\"Bonds\" percentage={state.risk.bonds} />\n                            <RiskLevelSheetRow category=\"Large Cap\" percentage={state.risk.largeCap} />\n                            <RiskLevelSheetRow category=\"Mid Cap\" percentage={state.risk.midCap} />\n                            <RiskLevelSheetRow category=\"Foreign\" percentage={state.risk.foreign} />\n                            <RiskLevelSheetRow category=\"Small Cap\" percentage={state.risk.smallCap} />\n                        </ul>\n                    </DropDisplay>\n\n                    <DropDisplay title=\"Current Amounts\" selected>\n                        <div className=\"current-amounts\">\n                            <label className=\"current-amounts__label\">\n                                Bonds: $\n                            <input className=\"current-amounts__input\" onChange={e => setBonds(e.currentTarget.value)} value={bonds} placeholder=\"bonds\" />\n                            </label>\n                            <label className=\"current-amounts__label\">\n                                Mid Cap: $\n                        <input className=\"current-amounts__input\" onChange={e => setMidCap(e.currentTarget.value)} value={midCap} placeholder=\"midCap\" />\n                            </label>\n                            <label className=\"current-amounts__label\">\n                                Large Cap: $\n                        <input className=\"current-amounts__input\" onChange={e => setLargeCap(e.currentTarget.value)} value={largeCap} placeholder=\"LargeCap\" />\n                            </label>\n                            <label className=\"current-amounts__label\">\n                                Foreign: $\n                            <input className=\"current-amounts__input\" onChange={e => setForeign(e.currentTarget.value)} value={foreign} placeholder=\"foreign\" />\n                            </label>\n                            <label className=\"current-amounts__label\">\n                                Small Cap: $\n                            <input className=\"current-amounts__input\" onChange={e => setSmallCap(e.currentTarget.value)} value={smallCap} placeholder=\"SmallCap\" />\n                            </label>\n                            <p className=\"error-message\">{error}</p>\n                        </div>\n                    </DropDisplay>\n                </div>\n\n                <div className=\"calculator-results\"> \n                    {\"level\" in state.risk && Object.keys(state.calculator).length > 0 ? <>\n                        <DropDisplay title=\"Total\" selected>\n                            <p className=\"calculator-page__info\">{total}</p>\n                        </DropDisplay>\n\n                        <DropDisplay title=\"New Amounts\" selected>\n                            <div className=\"calculator-page__info\">\n                                <div>Bonds: <p className=\"calculator-blue\">{newAmounts.bonds}</p></div>\n                                <div>Mid Cap: <p className=\"calculator-blue\">{newAmounts.midCap}</p></div>\n                                <div>Large Cap: <p className=\"calculator-blue\">{newAmounts.largeCap}</p></div>\n                                <div>Foreign: <p className=\"calculator-blue\">{newAmounts.foreign}</p></div>\n                                <div>Small Cap: <p className=\"calculator-blue\">{newAmounts.smallCap}</p></div>\n                            </div>\n                        </DropDisplay>\n\n                        <DropDisplay title=\"Differences\" selected>\n                            <div className=\"calculator-page__info\">\n                                <div>Bonds: <p className={isNegative(differences.bonds) ? \"calculator-red\" : \"calculator-green\"}>{differences.bonds}</p></div>\n                                <div>midCap: <p className={isNegative(differences.midCap) ? \"calculator-red\" : \"calculator-green\"}>{differences.midCap}</p></div>\n                                <div>largeCap: <p className={isNegative(differences.largeCap) ? \"calculator-red\" : \"calculator-green\"}>{differences.largeCap}</p></div>\n                                <div>foreign: <p className={isNegative(differences.foreign) ? \"calculator-red\" : \"calculator-green\"}>{differences.foreign}</p></div>\n                                <div>smallCap: <p className={isNegative(differences.smallCap) ? \"calculator-red\" : \"calculator-green\"}>{differences.smallCap}</p></div>\n                            </div>\n                        </DropDisplay>\n\n                        <DropDisplay title=\"Recommended Transfers\" selected>\n                            <div className=\"calculator-page__info\">\n                                {transfers.map((transfer, i) => <p key={i} className=\"calculator-transfers\">{transfer}</p>)}\n                            </div>\n                        </DropDisplay>\n                    </> : null\n                    }\n                </div>\n\n                <Button onClick={() => { \n                    validateInputs() ? receiveInputs(inputs) : setError(\"Inputs must be 0 or a positive number\");\n                }} text=\"Calculate\" />\n            </div>\n        </>\n    )\n};\n\nexport default CalculatorPage;","import { connect } from \"react-redux\";\nimport { receiveInputs } from \"../../actions/calculator_actions\";\nimport CalculatorPage from \"./CalculatorPage\";\n\nconst mapStateToProps = state => ({ \n    state \n});\n\nconst mapDispatchToProps = dispatch => ({\n    receiveInputs: inputs => dispatch(receiveInputs(inputs))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CalculatorPage);","import React from \"react\"; \nimport { Switch, Route } from \"react-router-dom\";\nimport HomePageContainer from \"./Home/HomePageContainer\";\nimport CalculatorPageContainer from \"./Calculator/CalculatorPageContainer\";\n\nconst App = () => {\n  return (\n    <Switch>\n      <Route exact path=\"/home\" component={HomePageContainer} />\n      <Route exact path=\"/calculator\" component={CalculatorPageContainer} />\n      <Route path=\"*\" component={HomePageContainer} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nconst Root = ({ store }) => {\n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <App />\n            </HashRouter>\n        </Provider>\n    );\n}\n\nexport default Root;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { RECEIVE_INPUTS } from \"../actions/calculator_actions\";\n\nconst calculatorReducer = (initialState = {}, action) => {\n    Object.freeze(initialState);\n    switch (action.type) {\n        case RECEIVE_INPUTS:\n            return { ...initialState, ...action.inputs };\n        default:\n            return initialState;\n    }\n};\n\nexport default calculatorReducer;","import { riskLevels } from \"../util/riskLevels\";\n\n// const defaultState = {\n//     selectLevel: 20\n// };\n\nconst riskReducer = (initialState = {}, action) => { \n    Object.freeze(initialState); \n    switch (action.type) {\n        case 1:\n            return { ...initialState, ...riskLevels[1]};\n        case 2:\n            return { ...initialState, ...riskLevels[2] };\n        case 3:\n            return { ...initialState, ...riskLevels[3] };\n        case 4:\n            return { ...initialState, ...riskLevels[4] };\n        case 5:\n            return { ...initialState, ...riskLevels[5] };\n        case 6:\n            return { ...initialState, ...riskLevels[6] };\n        case 7:\n            return { ...initialState, ...riskLevels[7] };\n        case 8:\n            return { ...initialState, ...riskLevels[8] };\n        case 9:\n            return { ...initialState, ...riskLevels[9] };\n        case 10:\n            return { ...initialState, ...riskLevels[10] };\n        default:\n            return initialState;\n    }\n};\n\nexport default riskReducer;","import { combineReducers } from \"redux\"; \nimport calculatorReducer from \"./calculator_reducer\";\nimport riskReducer from \"./risk_reducer\";\n\nconst rootReducer = combineReducers({\n    risk: riskReducer,\n    calculator: calculatorReducer\n});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\"; \n// import logger from \"redux-logger\"; \nimport rootReducer from \"../reducers/root_reducer\";\n\nconst configureStore = (preloadedState = {}) => { \n    // return createStore(rootReducer, preloadedState, applyMiddleware(logger));\n    return createStore(rootReducer, preloadedState);\n};\n\nexport default configureStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './components/Root';\nimport reportWebVitals from './reportWebVitals';\nimport configureStore from \"./store/store\";\nimport \"./index.css\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root store={store} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}